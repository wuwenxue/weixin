package co.dc.server.weixin.action;

import co.dc.commons.dto.RetStatus;
import co.dc.commons.json.JSONException;
import co.dc.commons.json.JSONObject;
import co.dc.commons.page.QueryResult;
import co.dc.commons.platform.PlatformConstant;
import co.dc.server.weixin.api.JiayouWeiXinManage;
import co.dc.server.weixin.api.TikiboxWeiXinManage;
import co.dc.server.weixin.service.MenuButtonSerice;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class MenuButtonAction extends BaseAction {

	@Resource
	private MenuButtonSerice buttonSerice;
	@Resource
	private TikiboxWeiXinManage tikiboxWeiXinManage;
	@Resource
	private JiayouWeiXinManage jiayouWeiXinManage;

	@RequestMapping({ "/menuList" })
	public ModelAndView menuList(String plat) {
		if(plat.equals("jiayou")){
			return new ModelAndView("menu/menuList")
			.addObject("menuIdList", buttonSerice.menuList(PlatformConstant.JIAYOU_WEB.getVal()))
			.addObject("plat", plat);
		}else if(plat.equals("tikibox")){
			return new ModelAndView("menu/menuList")
			.addObject("menuIdList", buttonSerice.menuList(PlatformConstant.TIKIBOX_WEB.getVal()))
			.addObject("plat", plat);
		}else{
			return new ModelAndView("menu/menuList");
		}
			
	}

	@RequestMapping({ "/subMenuList" })
	public ModelAndView subMenuList(long id) {
		return new ModelAndView("menu/subMenuList").addObject("menuId",id);
	}

	@RequestMapping({ "/menuListDo" })
	@ResponseBody
	public String menuListDo(int page, int rows,String plat) {
		int pageindex = page * rows - rows;
		int maxsize = rows;
		QueryResult result = this.buttonSerice.menuBarList(pageindex, maxsize,plat);
		Long total = result.getTotalrecord();
		List list = result.getResultlist();
		Map map = new HashMap();
		map.put("total", total);
		map.put("rows", list);
		return new JSONObject(map).toString();
	}

	@RequestMapping({ "/subMenuListDo" })
	@ResponseBody
	public String subMenuListDo(int page, int rows, long id) {
		int pageindex = page * rows - rows;
		int maxsize = rows;
		QueryResult result = this.buttonSerice.subMenuList(pageindex, maxsize,
				id);
		Long total = result.getTotalrecord();
		List list = result.getResultlist();
		Map map = new HashMap();
		map.put("total", total);
		map.put("rows", list);
		return new JSONObject(map).toString();
	}

	@RequestMapping({ "/saveMenu" })
	@ResponseBody
	public String saveMenu(String name, String type, String keyMenus,
			String urlAddress, String menuId,String plat) {
		if(StringUtils.isEmpty(menuId)){
			menuId="0";
		}
		RetStatus ret = this.buttonSerice.saveMenu(name, type, keyMenus,
				urlAddress, Long.parseLong(menuId),plat);
		return new JSONObject(ret).toString();
	}

	@RequestMapping({ "/updateMenu" })
	@ResponseBody
	public String updateMenu(long id, String name, String type,
			String keyMenus, String urlAddress, String menuId) {
		RetStatus ret = this.buttonSerice.updateMenu(id, name, type, keyMenus,
				urlAddress, Long.parseLong(menuId));
		return new JSONObject(ret).toString();
	}

	@RequestMapping({ "/delMenu" })
	@ResponseBody
	public String delMenu(long id) {
		RetStatus ret = this.buttonSerice.delMenu(id);
		return new JSONObject(ret).toString();
	}
	
	@RequestMapping("/syncMenu")
	@ResponseBody
	public String syncMenu(String plat){
		String str="";
		if(plat.equals("jiayou")){
			str=jiayouWeiXinManage.syncMenu();
		}else if(plat.equals("tikibox")){
			str=tikiboxWeiXinManage.syncMenu();
		}else{
			str="";//平台未知
		}
		return str;
	}
}